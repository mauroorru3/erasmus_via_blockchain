syntax = "proto3";
package university_chain_it.universitychainit;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "universitychainit/params.proto";
import "universitychainit/professors_exams.proto";
import "universitychainit/student_info.proto";
import "universitychainit/exams_info.proto";
import "universitychainit/transcript_of_records.proto";
// this line is used by starport scaffolding # 1

option go_package = "university_chain_it/x/universitychainit/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/university_chain_it/universitychainit/params";
  }
  // Queries a ProfessorsExams by index.
	rpc ProfessorsExams(QueryGetProfessorsExamsRequest) returns (QueryGetProfessorsExamsResponse) {
		option (google.api.http).get = "/university_chain_it/universitychainit/professors_exams/{examName}";
	}

	// Queries a list of ProfessorsExams items.
	rpc ProfessorsExamsAll(QueryAllProfessorsExamsRequest) returns (QueryAllProfessorsExamsResponse) {
		option (google.api.http).get = "/university_chain_it/universitychainit/professors_exams";
	}

// Queries a StudentInfo by index.
	rpc StudentInfo(QueryGetStudentInfoRequest) returns (QueryGetStudentInfoResponse) {
		option (google.api.http).get = "/university_chain_it/universitychainit/student_info";
	}
// Queries a ExamsInfo by index.
	rpc ExamsInfo(QueryGetExamsInfoRequest) returns (QueryGetExamsInfoResponse) {
		option (google.api.http).get = "/university_chain_it/universitychainit/exams_info/{examName}";
	}

	// Queries a list of ExamsInfo items.
	rpc ExamsInfoAll(QueryAllExamsInfoRequest) returns (QueryAllExamsInfoResponse) {
		option (google.api.http).get = "/university_chain_it/universitychainit/exams_info";
	}

// Queries a TranscriptOfRecords by index.
	rpc TranscriptOfRecords(QueryGetTranscriptOfRecordsRequest) returns (QueryGetTranscriptOfRecordsResponse) {
		option (google.api.http).get = "/university_chain_it/universitychainit/transcript_of_records";
	}
// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetProfessorsExamsRequest {
	  string examName = 1;

}

message QueryGetProfessorsExamsResponse {
	ProfessorsExams professorsExams = 1 [(gogoproto.nullable) = false];
}

message QueryAllProfessorsExamsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllProfessorsExamsResponse {
	repeated ProfessorsExams professorsExams = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetStudentInfoRequest {}

message QueryGetStudentInfoResponse {
	StudentInfo StudentInfo = 1 [(gogoproto.nullable) = false];
}
message QueryGetExamsInfoRequest {
	  string examName = 1;

}

message QueryGetExamsInfoResponse {
	ExamsInfo examsInfo = 1 [(gogoproto.nullable) = false];
}

message QueryAllExamsInfoRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllExamsInfoResponse {
	repeated ExamsInfo examsInfo = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetTranscriptOfRecordsRequest {}

message QueryGetTranscriptOfRecordsResponse {
	TranscriptOfRecords TranscriptOfRecords = 1 [(gogoproto.nullable) = false];
}
// this line is used by starport scaffolding # 3
