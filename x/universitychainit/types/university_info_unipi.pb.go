// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: universitychainit/university_info_unipi.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UniversityInfoUnipi struct {
	NextStudentId   uint64 `protobuf:"varint,1,opt,name=nextStudentId,proto3" json:"nextStudentId,omitempty"`
	SecretariatKey  string `protobuf:"bytes,2,opt,name=secretariatKey,proto3" json:"secretariatKey,omitempty"`
	UniversityKey   string `protobuf:"bytes,3,opt,name=universityKey,proto3" json:"universityKey,omitempty"`
	CaiKey          string `protobuf:"bytes,4,opt,name=caiKey,proto3" json:"caiKey,omitempty"`
	FifoHeadErasmus string `protobuf:"bytes,5,opt,name=fifoHeadErasmus,proto3" json:"fifoHeadErasmus,omitempty"`
	FifoTailErasmus string `protobuf:"bytes,6,opt,name=fifoTailErasmus,proto3" json:"fifoTailErasmus,omitempty"`
	DeadlineTaxes   string `protobuf:"bytes,7,opt,name=deadlineTaxes,proto3" json:"deadlineTaxes,omitempty"`
	DeadlineErasmus string `protobuf:"bytes,8,opt,name=deadlineErasmus,proto3" json:"deadlineErasmus,omitempty"`
}

func (m *UniversityInfoUnipi) Reset()         { *m = UniversityInfoUnipi{} }
func (m *UniversityInfoUnipi) String() string { return proto.CompactTextString(m) }
func (*UniversityInfoUnipi) ProtoMessage()    {}
func (*UniversityInfoUnipi) Descriptor() ([]byte, []int) {
	return fileDescriptor_52979d7f8f5aaf14, []int{0}
}
func (m *UniversityInfoUnipi) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UniversityInfoUnipi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UniversityInfoUnipi.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UniversityInfoUnipi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UniversityInfoUnipi.Merge(m, src)
}
func (m *UniversityInfoUnipi) XXX_Size() int {
	return m.Size()
}
func (m *UniversityInfoUnipi) XXX_DiscardUnknown() {
	xxx_messageInfo_UniversityInfoUnipi.DiscardUnknown(m)
}

var xxx_messageInfo_UniversityInfoUnipi proto.InternalMessageInfo

func (m *UniversityInfoUnipi) GetNextStudentId() uint64 {
	if m != nil {
		return m.NextStudentId
	}
	return 0
}

func (m *UniversityInfoUnipi) GetSecretariatKey() string {
	if m != nil {
		return m.SecretariatKey
	}
	return ""
}

func (m *UniversityInfoUnipi) GetUniversityKey() string {
	if m != nil {
		return m.UniversityKey
	}
	return ""
}

func (m *UniversityInfoUnipi) GetCaiKey() string {
	if m != nil {
		return m.CaiKey
	}
	return ""
}

func (m *UniversityInfoUnipi) GetFifoHeadErasmus() string {
	if m != nil {
		return m.FifoHeadErasmus
	}
	return ""
}

func (m *UniversityInfoUnipi) GetFifoTailErasmus() string {
	if m != nil {
		return m.FifoTailErasmus
	}
	return ""
}

func (m *UniversityInfoUnipi) GetDeadlineTaxes() string {
	if m != nil {
		return m.DeadlineTaxes
	}
	return ""
}

func (m *UniversityInfoUnipi) GetDeadlineErasmus() string {
	if m != nil {
		return m.DeadlineErasmus
	}
	return ""
}

func init() {
	proto.RegisterType((*UniversityInfoUnipi)(nil), "university_chain_it.universitychainit.UniversityInfoUnipi")
}

func init() {
	proto.RegisterFile("universitychainit/university_info_unipi.proto", fileDescriptor_52979d7f8f5aaf14)
}

var fileDescriptor_52979d7f8f5aaf14 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x40, 0xb3, 0xb5, 0x46, 0x5d, 0x50, 0x21, 0x82, 0xe4, 0xb4, 0x14, 0x51, 0xc9, 0xa5, 0xcd,
	0xc1, 0x3f, 0x10, 0x44, 0x8b, 0xb7, 0xda, 0x5e, 0xbc, 0x84, 0x35, 0x99, 0xe0, 0x40, 0xdd, 0x84,
	0xec, 0x46, 0x92, 0xbf, 0xf0, 0xa7, 0x04, 0x8f, 0x3d, 0x7a, 0x94, 0xe4, 0x47, 0x64, 0xb7, 0xc6,
	0x34, 0x69, 0x8f, 0xfb, 0xe6, 0xf1, 0x76, 0x60, 0xe8, 0x38, 0x17, 0xf8, 0x0e, 0x99, 0x44, 0x55,
	0x86, 0xaf, 0x1c, 0x05, 0x2a, 0xbf, 0x25, 0x01, 0x8a, 0x38, 0x09, 0x72, 0x81, 0x29, 0x4e, 0xd2,
	0x2c, 0x51, 0x89, 0x73, 0xb5, 0x31, 0x34, 0x7e, 0x80, 0x6a, 0xb2, 0x95, 0xb8, 0xf8, 0x1c, 0xd0,
	0xb3, 0xc5, 0x3f, 0x9d, 0x8a, 0x38, 0x59, 0xe8, 0x88, 0x73, 0x49, 0x8f, 0x05, 0x14, 0xea, 0x49,
	0xe5, 0x11, 0x08, 0x35, 0x8d, 0x5c, 0x32, 0x22, 0xde, 0x70, 0xd6, 0x85, 0xce, 0x35, 0x3d, 0x91,
	0x10, 0x66, 0xa0, 0x78, 0x86, 0x5c, 0x3d, 0x42, 0xe9, 0x0e, 0x46, 0xc4, 0x3b, 0x9a, 0xf5, 0xa8,
	0xae, 0xb5, 0x5f, 0x6b, 0x6d, 0xcf, 0x68, 0x5d, 0xe8, 0x9c, 0x53, 0x3b, 0xe4, 0xa8, 0xc7, 0x43,
	0x33, 0xfe, 0x7b, 0x39, 0x1e, 0x3d, 0x8d, 0x31, 0x4e, 0x1e, 0x80, 0x47, 0x77, 0x19, 0x97, 0x6f,
	0xb9, 0x74, 0xf7, 0x8d, 0xd0, 0xc7, 0x8d, 0x39, 0xe7, 0xb8, 0x6c, 0x4c, 0xbb, 0x35, 0x37, 0xb0,
	0xde, 0x28, 0x02, 0x1e, 0x2d, 0x51, 0xc0, 0x9c, 0x17, 0x20, 0xdd, 0x83, 0xf5, 0x46, 0x1d, 0xa8,
	0x7b, 0x0d, 0x68, 0x7a, 0x87, 0xeb, 0x5e, 0x0f, 0xdf, 0xde, 0x7f, 0x55, 0x8c, 0xac, 0x2a, 0x46,
	0x7e, 0x2a, 0x46, 0x3e, 0x6a, 0x66, 0xad, 0x6a, 0x66, 0x7d, 0xd7, 0xcc, 0x7a, 0x1e, 0xef, 0x38,
	0x84, 0x5f, 0xf8, 0xdb, 0xd7, 0x54, 0x65, 0x0a, 0xf2, 0xc5, 0x36, 0xe7, 0xbb, 0xf9, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0xa0, 0xee, 0x22, 0x81, 0xef, 0x01, 0x00, 0x00,
}

func (m *UniversityInfoUnipi) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UniversityInfoUnipi) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UniversityInfoUnipi) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DeadlineErasmus) > 0 {
		i -= len(m.DeadlineErasmus)
		copy(dAtA[i:], m.DeadlineErasmus)
		i = encodeVarintUniversityInfoUnipi(dAtA, i, uint64(len(m.DeadlineErasmus)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.DeadlineTaxes) > 0 {
		i -= len(m.DeadlineTaxes)
		copy(dAtA[i:], m.DeadlineTaxes)
		i = encodeVarintUniversityInfoUnipi(dAtA, i, uint64(len(m.DeadlineTaxes)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.FifoTailErasmus) > 0 {
		i -= len(m.FifoTailErasmus)
		copy(dAtA[i:], m.FifoTailErasmus)
		i = encodeVarintUniversityInfoUnipi(dAtA, i, uint64(len(m.FifoTailErasmus)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.FifoHeadErasmus) > 0 {
		i -= len(m.FifoHeadErasmus)
		copy(dAtA[i:], m.FifoHeadErasmus)
		i = encodeVarintUniversityInfoUnipi(dAtA, i, uint64(len(m.FifoHeadErasmus)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CaiKey) > 0 {
		i -= len(m.CaiKey)
		copy(dAtA[i:], m.CaiKey)
		i = encodeVarintUniversityInfoUnipi(dAtA, i, uint64(len(m.CaiKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.UniversityKey) > 0 {
		i -= len(m.UniversityKey)
		copy(dAtA[i:], m.UniversityKey)
		i = encodeVarintUniversityInfoUnipi(dAtA, i, uint64(len(m.UniversityKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SecretariatKey) > 0 {
		i -= len(m.SecretariatKey)
		copy(dAtA[i:], m.SecretariatKey)
		i = encodeVarintUniversityInfoUnipi(dAtA, i, uint64(len(m.SecretariatKey)))
		i--
		dAtA[i] = 0x12
	}
	if m.NextStudentId != 0 {
		i = encodeVarintUniversityInfoUnipi(dAtA, i, uint64(m.NextStudentId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintUniversityInfoUnipi(dAtA []byte, offset int, v uint64) int {
	offset -= sovUniversityInfoUnipi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UniversityInfoUnipi) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NextStudentId != 0 {
		n += 1 + sovUniversityInfoUnipi(uint64(m.NextStudentId))
	}
	l = len(m.SecretariatKey)
	if l > 0 {
		n += 1 + l + sovUniversityInfoUnipi(uint64(l))
	}
	l = len(m.UniversityKey)
	if l > 0 {
		n += 1 + l + sovUniversityInfoUnipi(uint64(l))
	}
	l = len(m.CaiKey)
	if l > 0 {
		n += 1 + l + sovUniversityInfoUnipi(uint64(l))
	}
	l = len(m.FifoHeadErasmus)
	if l > 0 {
		n += 1 + l + sovUniversityInfoUnipi(uint64(l))
	}
	l = len(m.FifoTailErasmus)
	if l > 0 {
		n += 1 + l + sovUniversityInfoUnipi(uint64(l))
	}
	l = len(m.DeadlineTaxes)
	if l > 0 {
		n += 1 + l + sovUniversityInfoUnipi(uint64(l))
	}
	l = len(m.DeadlineErasmus)
	if l > 0 {
		n += 1 + l + sovUniversityInfoUnipi(uint64(l))
	}
	return n
}

func sovUniversityInfoUnipi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozUniversityInfoUnipi(x uint64) (n int) {
	return sovUniversityInfoUnipi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UniversityInfoUnipi) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUniversityInfoUnipi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UniversityInfoUnipi: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UniversityInfoUnipi: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextStudentId", wireType)
			}
			m.NextStudentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUniversityInfoUnipi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextStudentId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecretariatKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUniversityInfoUnipi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SecretariatKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UniversityKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUniversityInfoUnipi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UniversityKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaiKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUniversityInfoUnipi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CaiKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FifoHeadErasmus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUniversityInfoUnipi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FifoHeadErasmus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FifoTailErasmus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUniversityInfoUnipi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FifoTailErasmus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeadlineTaxes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUniversityInfoUnipi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeadlineTaxes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeadlineErasmus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUniversityInfoUnipi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeadlineErasmus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUniversityInfoUnipi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUniversityInfoUnipi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipUniversityInfoUnipi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowUniversityInfoUnipi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUniversityInfoUnipi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUniversityInfoUnipi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthUniversityInfoUnipi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupUniversityInfoUnipi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthUniversityInfoUnipi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthUniversityInfoUnipi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowUniversityInfoUnipi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupUniversityInfoUnipi = fmt.Errorf("proto: unexpected end of group")
)
